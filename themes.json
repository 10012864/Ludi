{
  "no-particle": {
    "type": "add"
  },
  "normal": {
    "type": "change",
    "code": ""
  },
  "hacker": {
    "type": "change",
    "code": ""
  }
}